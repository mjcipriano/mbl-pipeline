[GENERAL]
description   =  !ORGANISM! cDNA and EST Sequences
db_adaptor    = Bio::DB::GFF
db_args       = -adaptor dbi::mysqlopt 
	        -dsn     dbi:mysql:database=!ORGANISM!screads;host=gmoddb.mbl.edu
user          = gbrowse
pass          = ropassword123


init_code =
  $ENV{BLASTDB} = '/blastdb';
  $ENV{BLASTMAT} = '/blastdb';
  sub read_title {
	my $feature = shift;
        my $titlevalue = $feature->name .  ':' . $feature->ref . ':' . $feature->start . '...' . $feature->stop . "\n\n" .
        '  Partner Name:' . $feature->attributes('ReadPair') . "\n" .
        'Partner cDNA:' . $feature->attributes('ReadPairContig') ;
        return $titlevalue;
  }
  sub read_insert_color {
	my $feature = shift;
	my $obs_insert_size = $feature->attributes('ObservedInsertSize');
	my $given_insert_size = $feature->attributes('GivenInsertSize');
	my $given_std_dev =  $feature->attributes('GivenInsertStdDev');
	my $low_val = $given_insert_size - (3*$given_std_dev);
	my $high_val = $given_insert_size + (3*$given_std_dev);
	my $feature_method = $feature->method();
	if( $obs_insert_size > $high_val )
	{
		return 'red';
	} elsif($obs_insert_size < $low_val)
	{
		return 'pink';
	}
	if($feature_method eq 'read')
	{
		return "yellow";
	} elsif($feature_method eq 'missing-partner')
	{
		return "wheat";
	}elsif($feature_method eq 'partner-different-contig-negative-gap')
        {
                return "orange";
        }elsif($feature_method eq 'partner-different-contig-positive-gap')
        {
                return "blue";
        }elsif($feature_method eq 'partner-different-contig-same-direction' || $feature_method eq 'partner-orientation-error')
        {
                return "brown";
        }elsif($feature_method eq 'partner-different-supercontig')
        {
                return "indigo";
        }
  } 
  sub read_link{
        my $feature = shift;
        my $float = '<a href=\"/gb/gbrowse/!ORGANISM!screads?name=read:' . $feature->name . '\">' . $feature->name . '</a>:' . $feature->ref . ':' . $feature->start . '...' . $feature->stop . "<br><br>" .
        '  Partner Name:<a href=\"/gb/gbrowse/!ORGANISM!screads?name=read:' . $feature->attributes('ReadPair') . '\">' . $feature->attributes('ReadPair') . '</a>' .
        ' <a href=\"/perl/site/!ORGANISM!?page=showread&read=' . $feature->attributes('ReadPair') . '\">(details)</a>' .
        '<br>Partner cDNA:' . 
        '<a href=\"/gb/gbrowse/!ORGANISM!screads?name=contig_' . $feature->attributes('ReadPairContig') . '\">' . $feature->attributes('ReadPairContig') . '</a> ' .
        '<a href=\"/perl/site/!ORGANISM!?page=showcontig&contig=' . $feature->attributes('ReadPairContig') . '\">(details)</a>' ;
        $float =~ s/\&/\&amp\;/gi;
        $float =~ s/\"/\&quot\;/gi;
        my $link = '/perl/site/!ORGANISM!?page=showread&read=' . $feature->name;
        my $retval =  $link . ';" onmouseover="return overlib(\'' . $float . '\', MOUSEOFF, STICKY, WIDTH, 400);" onmouseout="return nd();';
        return $retval;
  }
  sub orf_link {
       my $feature = shift;
        return '/perl/site/!ORGANISM!?page=showorf&orf=' . $feature->name();
  }
  sub over_contig_link {
        my $feature = shift;
        my $link = '/perl/site/!ORGANISM!?page=showcontig&contig=' . $feature->name();
        my $swissprot = 'SwissProt: ' . $feature->attributes('SwissProt');
        $swissprot =~ s/\&/\&amp\;/gi;
        $swissprot =~ s/\"/\&quot\;/gi;
        my $refseqprot = 'refseq_protein: ' . $feature->attributes('refseq_protein');
        $refseqprot =~ s/\&/\&amp\;/gi;
        $refseqprot =~ s/\"/\&quot\;/gi;
        my $nt = 'NT: ' .  $feature->attributes('nt');
        $nt =~ s/\&/\&amp\;/gi;
        $nt =~ s/\"/\&quot\;/gi;
        my $title_value = 'Contig:' . $feature->name .  ':' . $feature->ref . ':' . $feature->start . '...' . $feature->stop . "<br>";
        $title_value .= "<br><br>" .  $swissprot . "<br><br>" .  $refseqprot . "<br><br>" .  $nt;
        return $link . ';" onmouseover="return overlib(\'' . $title_value . ').\', MOUSEOFF, WIDTH, 400);" onmouseout="return nd();';
  }
  sub over_orf_link {
                my $feature = shift;
                my $pfam = $feature->attributes('Pfam_ls');
                my $pfam_text = 'Pfam_ls: No significant Pfam_ls hit';
        my $link = '/perl/site/!ORGANISM!?page=showorf&orf=' . $feature->name();
                if(scalar $pfam == 0)
                {
                        $pfam_text = 'Pfam_ls: ' . $feature->attributes('Pfam_ls');
                } else
                {
                }
        my $swissprot = 'SwissProt: ' . $feature->attributes('SwissProt');
        $swissprot =~ s/\&/\&amp\;/gi;
        $swissprot =~ s/\"/\&quot\;/gi;
        my $refseqprot = 'refseq_protein: ' . $feature->attributes('refseq_protein');
        $refseqprot =~ s/\&/\&amp\;/gi;
        $refseqprot =~ s/\"/\&quot\;/gi;
        my $nr = 'NR: ' .  $feature->attributes('nr');
        $nr =~ s/\&/\&amp\;/gi;
        $nr =~ s/\"/\&quot\;/gi;
                my $title_value = 'ORF:' . $feature->name .  ':' . $feature->ref . ':' . $feature->start . '...' . $feature->stop . "<br>";
        if($feature->attributes('TestCode'))
        {
            $title_value .= 'TC-' . $feature->attributes('TestCode');
        }
        if($feature->attributes('GeneScan'))
        {
                    $title_value .= ':GS-' . $feature->attributes('GeneScan');
        }
        if($feature->attributes('CodonPreference'))
        {
                    $title_value .= ':CP-' . $feature->attributes('CodonPreference');
        }
        $title_value .= "<br><br>" .
                                $swissprot . "<br><br>" .
                                $refseqprot . "<br><br>" .
                                $nr . "<br><br>" .
                                $pfam_text;
                return $link . ';" onmouseover="return overlib(\'' . $title_value . ').\', MOUSEOFF, WIDTH, 400);" onmouseout="return nd();';
  }
  sub orf_name{
        my $feature = shift;
        my $retval = $feature->name;
        if($feature->attributes('Annotation') && $feature->attributes('Annotation') ne 'No official annotation')
        {
                $retval = 'orf:' . $retval . ' ' . $feature->attributes('Annotation');
        } elsif( ($feature->attributes('SwissProt') ne 'No significant nr Hit') && ($feature->attributes('SwissProt') ne '') ) {
                my @nr_desc = split(/\|/, $feature->attributes('SwissProt') );
                $retval = 'orf:' . $retval . ' ' . $nr_desc[5];
        } elsif( ($feature->attributes('refseq_protein') ne 'No significant nr Hit') && ($feature->attributes('refseq_protein') ne '') ) {
                my @nr_desc = split(/\|/, $feature->attributes('refseq_protein') );
                $retval = 'orf:' . $retval . ' ' . $nr_desc[5];
        } else
    {
        $retval = 'orf:' . $feature->name . ' ' . 'hypothetical protein';
    }
        return $retval;
  }
  sub contig_name{
    my $feature = shift;
    my $retval = $feature->name;
    if( ($feature->attributes('SwissProt') ne 'No significant nr Hit') && ($feature->attributes('SwissProt') ne '') ) {
                my @nr_desc = split(/\|/, $feature->attributes('SwissProt') );
                $retval = 'Contig:' . $retval . ' ' . $nr_desc[5];
        } elsif( ($feature->attributes('refseq_protein') ne 'No significant nr Hit') && ($feature->attributes('refseq_protein') ne '') ) {
                my @nr_desc = split(/\|/, $feature->attributes('refseq_protein') );
                $retval = 'Contig:' . $retval . ' ' . $nr_desc[5];
        } else
    {
        $retval = 'Contig:' . $feature->name;
    }
        return $retval;
  }
  sub generic_label{
	my $feature = shift;
	my $float = $feature->attributes('float');
	$float =~ s/\&/\&amp\;/gi;
	$float =~ s/\"/\&quot\;/gi;
	my $link = '/gb/gbrowse_details/!ORGANISM!screads?name=' . $feature->name;
	my $retval =  $link . ';" onmouseover="return overlib(\'' . $float . ').\', MOUSEOFF, WIDTH, 400);" onmouseout="return nd();';
	return $retval;
  }


# DAS reference server
das mapmaster  = SELF

aggregators = transcript alignment overlap_coverage{coverage} quality_coverage{quality} match

plugin_path = /xraid/bioware/gmod/gbrowse-plugins/

plugins = SequenceDumper FastaDumper RestrictionAnnotator BatchDumper GFFDumper AlignTwoSequences SageResults SageGraph SixFrameDumper AnnotateOrfs RegexFinder 
head = <LINK REL="SHORTCUT ICON" HREF="http://gmod.mbl.edu/favicon.ico">
       <script type="text/javascript" src="/javascript/overlib.js"></script>

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
tmpimages   = /gbrowse/tmp

# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 25
bump density  = 100

# where to link to when user clicks in detailed view

# what image widths to offer
image widths  = 300 450 640 800 1024 1200 1400 1500 1700 2000 2400

# default width of detailed view (pixels)
default width = 800
default features = supercontig contig ORF contig:overview

# max and default segment sizes for detailed view
max segment     = 7000000
default segment = 50000

# zoom levels
zoom levels    = 100 200 500 1000 2000 5000 10000 20000 40000 100000 200000 500000 1000000

# colors of the overview, detailed map and key
overview bgcolor = lightgrey
detailed bgcolor = lightgoldenrodyellow
key bgcolor      = beige

# examples to show in the introduction
examples = contig_1 
	   supercontig_13

# "automatic" classes to try when an unqualified identifier is given
automatic classes = Symbol Gene Clone contig supercontig sagetag orf read EST

# Various places where you can insert your own HTML -- see configuration docs
html1 = 
html2 = 
html3 = 
html4 = 
html5 = 
html6 = 

header = sub {
        delete $ENV{REQUEST_METHOD};
        return qx!/xraid/bioware/gmod/mblweb-gmod/cgi-bin/site page=header organism=!ORGANISM! noheader=T!;
 }
footer = sub {
        delete $ENV{REQUEST_METHOD};
        return qx!/xraid/bioware/gmod/mblweb-gmod/cgi-bin/site page=footer organism=!ORGANISM! noheader=T!;
 }

### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

[Contig]
feature      = contig
glyph        = generic
label        = \&contig_name
bgcolor      = yellow
forwardcolor = yellow
reversecolor = turquoise
strand_arrow = 1
height       = 6
description  = 1
link         = \&over_contig_link
key          = cDNAs
das category = structural
citation     = Assembly of whole genome shotgun sequences.  A contig is defined as a contiguous region of DNA consensus sequence constructed by aligning many sequence "reads" (one "read" is the data generated from one sequencing reaction).

[Contig:overview]
feature      = contig
glyph        = generic
bgcolor      = yellow
forwardcolor = yellow
reversecolor = turquoise
strand_arrow = 1
height       =3 
description  = 1
key          = cDNA:overview

[Interpro]
feature      = match:interpro
glyph        = processed_transcript
fgcolor      = black
bgcolor      = black
strand_arrow = 1
height       = 6
line_width   = 10
description  = 1
label        = sub {
                my $feature = shift;
		my $desc = $feature->attributes('InterproDescription');;
		if($desc eq ' |')
		{
			$desc = $feature->attributes('Description');
		}
                return $feature->attributes('Algorithm') . ':' . $feature->name . " " . $desc ;
 }
linewidth    = 3
link         = AUTO
key          = Interpro Matches
citation     = Tracking of matches of the predicted open reading frames (ORFs) to <a href="http://www.ebi.ac.uk/interpro/">Interpro Domains</a>.  Searches use global alignment models.  Only hits of e<sup>-03</sup> are shown.  Intergenic spaces are not searched for Interpro Domains.
 
[ORFs] 
feature       = ORF
glyph         = processed_transcript
label   = \&orf_name
bgcolor =  sub {
        my $feature = shift;
    if($feature->strand == "1")
    {
        return 'blue';
    } else
    { 
        return 'red';
    }   
    }
fgcolor = sub {
        my $feature = shift;
        if($feature->strand == "1")
        {
                return 'blue';
        } else 
        {
                return 'red';
        }       
    }
title        = sub {
        return '';
  }
linewidth    = 4
height        = 10
link          = \&over_orf_link
description   = 1
strand_arrow = 1
key           = Open Reading Frames
citation      = Predicted open reading frames or protein coding genes (these terms are used interchangably).  Text above glyph is the annotation (if any exists) or best BLAST hit (if 1e<sup>-4</sup> or better).

[Read]
feature      = read:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
connector    = 1
height       = 6
description  = 0
title        = \&read_title
group_pattern = /..$/
link          = \&read_link
das category = structural
key          = Read, Partner within Same cDNA
citation     = Reads whose partners have been placed in the same contig, implying that the clone has been placed uniquely within the assembly.  Based upon the estimated insert size ranges for the shotgun libraries, the colors of the reads will show red if the insert size was larger then expected and pink if the insert size is smaller then expected.
 
[ReadPartUnplaced]
feature      = unplaced-partner:read
glyph        = generic
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
title        = \&read_title
link          = \&read_link
das category = structural
key          = Read, Partner Unplaced
citation     = Reads whose partners exist, but have not been placed in the assembly.  Sequence quality or an unsolved repeat region of the genome are the most frequent causes.
 
[ReadPartMissing]
feature      = missing-partner:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
link          = \&read_link
das category = structural
citation     = Reads whose partners do not exist, almost exclusively due to failed DNA sequencing reactions.
key          = Read, Partner Missing
 
[ReadPartDiffContigNeg]
feature      = partner-different-contig-negative-gap:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
group_pattern = /..$/
title        = \&read_title
link          = \&read_link
das category = structural
key          = Read, Partner in Different cDNA with Negative Gap
citation    = Reads whose partners span a gap within an assembly supercontig but the statistical estimate of gap size, based on estimated insert size ranges for the shotgun libraries, is negative.  Our assemblies secondarily enforce a 100 bp minimum gap size.
 
[ReadPartDiffContigPos]
feature      = partner-different-contig-positive-gap:read
glyph        = segments
bgcolor      = \&read_insert_color
strand_arrow = 1
connector = 1
height       = 6
description  = 0
title        = \&read_title
group_pattern = /..$/
link          = \&read_link
das category = structural
key          = Read, Partner in Different cDNA with Positive Gap
citation      = Reads whose partners span a gap within an assembly supercontig and the statistical estimate of gap size, based on estimated insert size ranges for the shotgun libraries, is positive.  Our assemblies secondarily enforce a 100 bp minimum gap size.
 
[ReadPartDiffContigSameDir]
feature      = partner-different-contig-same-direction:read partner-orientation-error:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
group_pattern = /..$/
#draw_dna    = 1
title        = \&read_title
link          = \&read_link
das category = structural
key          = Read, Orientation Error
citation     = Forward-reverse pair reads from the same recominant plasmid that do not orient towards each other.  This is a sign of read mis-naming or assembly error.
                                                                                           
[ReadPartDiffSuper]
feature      = partner-different-supercontig:read
glyph        = segments
bgcolor       = \&read_insert_color
strand_arrow = 1
height       = 6
description  = 0
title        = \&read_title
link          = \&read_link
das category = structural
key          = Read, Partner in Different cDNA Assembly Scaffold
citation     = Reads whose partners are placed in different supercontigs ("scaffolds").  Despite this placement of reads, sufficient evidence does not yet exist to join the supercontigs.

[RepeatedSequences]
feature       = internal_match
glyph         = generic
bgcolor       = lightgray
fgcolor       = black
label   = sub {
                my $feature = shift;
                my $retval = "Match to contig_" . $feature->attributes('query_contig') . " " . $feature->attributes('query_start') . "-" . $feature->attributes('query_end') . " %" . $feature->attributes('identity') . " identity";
 }
height        = 4
stranded      = 1
link          = sub {
                my $feature = shift;
                return "?ref=contig_" . $feature->attributes('query_contig') . ";start=" . $feature->attributes('query_start') . ";stop=" . $feature->attributes('query_end');
 }
description   = 1
key           = Intra-Genome Nucleotide Matches
citation      = Regions of the genome with perfect identity, as short as 20 bp, to sequence(s) elsewhere in the genome, as detected by the NUCMER program in the <a href="http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?cmd=Retrieve&db=pubmed&dopt=Abstract&list_uids=14759262">MUMmer package</a>.  Each match is represented by a glyph. Regions matching multiple locations throughout the genome will have multiple glyphs.


[Coverage]
feature      = overlap_coverage
glyph        = xyplot
graph_type   = boxes
height       = 40
graph_type   = line
label        = 1
scale        = right
key          = Read Overlap Coverage
citation     = A plot of the number of sequencing reads underlying the prediction of contig consensus sequence.

[Quality]
feature      = quality_coverage
glyph        = xyplot
graph_type   = boxes
height       = 40
min_score    = 0
max_score    = 100
label        = 1
scale        = right
key          = cDNA Sequence Quality
citation     = A plot of the quality of the contig consensus sequence.

[DNA/GC Content]
glyph        = dna
global feature = 1
height       = 40
do_gc        = 1
fgcolor      = red
axis_color   = blue
citation     = A plot of GC content along assembly contigs.
                                                                                                                                                                                    
[Translation]
glyph        = translation
global feature = 1
height       = 40
fgcolor      = blue
start_codons = 1
stop_codons  = 1
translation  = 6frame
key          = Six Frame Translation
citation     = Mapping of start (arrowheads) and stop (vertical lines) codons in all six open reading frames.  Amino acid sequences will be shown at small scales.



[AlignTwoSequences:plugin]
bl2seq_executable = /xraid/bioware/linux/blast/bin/bl2seq

[SequenceFinder:plugin]
blastall_executable = /bioware/blast/blastall
blast_db = /blastdb/!ORGANISM!_supercontig

[RegexFinder:plugin]
nt_fasta_file=/blastdb/!ORGANISM!_supercontig

[SixFrameDumper:plugin]
db_name    = !ORGANISM!

#[Aligner:plugin]
#alignable_tracks   = EST 
# Read ReadPartUnplaced ReadPartMissing ReadPartDiffContigNeg ReadPartDiffContigPos ReadPartDiffContigSameDir ReadPartDiffSuper # Must add target to the reads gff files
#upcase_tracks      = CDS Motifs ORFs
#upcase_default     = CDS

